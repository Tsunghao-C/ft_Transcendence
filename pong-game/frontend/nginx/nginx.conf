worker_processes 1;
# pid /tmp/nginx/nginx.pid;  # Changed PID location

load_module modules/ngx_http_modsecurity_module.so;

events {
    multi_accept on;
    worker_connections 1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;

    client_max_body_size 8M;

    log_format json_combined escape=json '{'
        '"time_local": "$time_local", '
        '"remote_addr": "$remote_addr", '
        '"request_method": "$request_method", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referrer", '
        '"http_user_agent": "$http_user_agent", '
        '"upstream_response_time": "$upstream_response_time" '
        '"modsec_transaction_id": "$upstream_http_x_modsecurity_transaction_id"'
    '}';

    # Logging using JSON format
    access_log /var/log/nginx/access.log json_combined;
    error_log /var/log/nginx/error.log debug;

    # Activate ModSecurity WAF
    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    # Basic settings
    sendfile        on;
    keepalive_timeout  65;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    upstream app {
        server game_service:8004;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host:8443$request_uri;

        # # Handle static files
        # location /static/ {
        #     alias /app/static/;
        #     expires 30d;
        #     add_header Cache-Control "public, no-transform";
        # }
        # location / {
        #     proxy_pass http://app;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header Host $host;
        #     proxy_redirect off;
        # }
    }

    server {
        listen 443 ssl; # if we don't use WAF
        server_name localhost;

        # # Activate ModSecurity WAF
        # modsecurity on;
        # modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

        # If we use WAF, this part is handled already

        # Health check endpoint
        root /usr/share/nginx/html;
        index index.html;

        location / {
            # modsecurity off;
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X_Forwarded-Proto $scheme;
            # proxy_redirect off;
            proxy_intercept_errors on;
            error_log /var/log/nginx/error.log debug;
        }

        location /static/ {
            alias /home/app/pong-game/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        location /health {
            access_log off;
            add_header  Content-Type text/plain;
            return 200 'healthy\n';
        }

        # Basic XSS test on WAF
        location /test-waf {
            if ($args ~ "<script>") {
                return 403;
            }
            return 200 "WAF Test Endpoint\n";
        }

        # API routes
        # location /api/ {
        #     # Auth Service
        #     location /api/auth/ {
        #         set $upstream_auth "auth_service:8001";
        #         proxy_pass http://$upstream_auth;
        #     }

        #     # User Service
        #     location /api/users/ {
        #         set $upstream_user "user_service:8002";
        #         proxy_pass http://$upstream_user;
        #     }

        #     # Game Service
        #     location /api/game/ {
        #         set $upstream_game "game_service:8004";
        #         proxy_pass http://$upstream_game;
        #     }

        #     # Common headers for all API routes
        #     proxy_http_version 1.1;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # WebSocket for game
        # location /ws/ {
        #     set $upstream_game "game_service:8004";
        #     proxy_pass http://$upstream_game;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_set_header Host $http_host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_read_timeout 86400;
        # }

        # # Monitoring endpoints
        # location /grafana/ {
        #     set $upstream_grafana "grafana:3001";
        #     proxy_pass http://$upstream_grafana/;
        #     proxy_set_header Host $http_host;
        # }

        # location /prometheus/ {
        #     set $upstream_prometheus "prometheus:9090";
        #     proxy_pass http://$upstream_prometheus/;
        #     proxy_set_header Host $http_host;
        # }

        # location /kibana/ {

        #     modsecurity off; # Remove ModSecurity for kibana path temporary

        #     proxy_pass http://kibana:5601;
        #     # Additional necessary headers
        #     proxy_http_version 1.1;
        #     proxy_set_header Host $http_host;  # use $http_host instead of $host to keep the port information
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header X-Forwarded-Host $http_host;

        #     # Important for Kibana
        #     proxy_set_header Accept-Encoding "";
        #     sub_filter_types *;
        #     sub_filter '<head>' '<head><base href="/kibana/">';
        #     sub_filter_once off;

        #     # Access control on buffer settings
        #     proxy_buffering on;
        #     proxy_buffer_size 128k;
        #     proxy_buffers 4 256k;
        #     proxy_busy_buffers_size 256k;
        # }
    }
}

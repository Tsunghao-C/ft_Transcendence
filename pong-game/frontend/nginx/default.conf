# Replace upstream blocks with resolver
resolver 127.0.0.11 valid=30s;

# # If we use WAF, this part is handled already
# server {
#     listen 80;
#     server_name localhost;
#     return 301 https://$host$request_uri;
# }

server {
    listen 80;
    # listen 443 ssl http2; # if we don't use WAF
    server_name localhost;

    # # If we use WAF, this part is handled already
    # # # SSL configuration
    # # ssl_certificate /etc/nginx/certs/fullchain.pem;
    # # ssl_certificate_key /etc/nginx/certs/privkey.pem;
    # # ssl_session_timeout 1d;
    # # ssl_session_cache shared:SSL:50m;
    # # ssl_session_tickets off;

    # # modern SSL configs
    # ssl_protocols   TLSv1.2 TLSv1.3
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers   off;

    # Frontend SPA
    location / {
        set $upstream_spa "spa:3000";
        proxy_pass http://$upstream_spa;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # root /usr/share/nginx/html;
        # try_files $uri $uri/ /index.html;
        
        # # CORS headers
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    }

    # Auth Service endpoints
    location /auth/ {
        set $upstream_auth "auth_service:8001";
        proxy_pass http://$upstream_auth;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # User Service endpoints
    location /user/ {
        set $upstream_user "user_service:8002";
        proxy_pass http://$upstream_user;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Game Service endpoints
    location /game/ {
        set $upstream_game "game_service:8004";
        proxy_pass http://$upstream_game;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
